generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name          String?
  email         String         @unique
  password_hash String?
  auth_provider String?        @default("local")
  provider_id   String?
  user_purpose  String?
  created_at    DateTime?      @default(now())
  updated_at    DateTime?      @default(now())
  links         Link[]
  subscriptions Subscription[]
}

model Link {
  id         String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String          @db.Uuid
  original_url String
  short_code String          
  title      String?
  is_active  Boolean         @default(true)
  is_deleted Boolean         @default(false)
  description String?
  created_at DateTime?       @default(now())
  updated_at DateTime?       @default(now())
  clicks     Click[]
  analytics  AnalyticsCache[]

  user       User            @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}

model Click {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  link_id    String    @db.Uuid
  clicked_at DateTime? @default(now())
  ip_address String?   @db.Inet
  user_agent String?
  device_type String?
  os         String?
  browser    String?
  referrer   String?
  country    String?
  region     String?
  city       String?

  link       Link      @relation(fields: [link_id], references: [id], onDelete: Cascade)

  @@index([link_id])
  @@index([clicked_at])
  @@index([country])
}

model AnalyticsCache {
  id          String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  link_id     String  @db.Uuid
  date        DateTime
  click_count Int     @default(0)
  unique_users Int    @default(0)
  ctr         Float?

  link        Link    @relation(fields: [link_id], references: [id], onDelete: Cascade)
}

model Subscription {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  plan       String?  @default("free")
  status     String?  @default("active")
  started_at DateTime? @default(now())
  expires_at DateTime?

  user       User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
}
